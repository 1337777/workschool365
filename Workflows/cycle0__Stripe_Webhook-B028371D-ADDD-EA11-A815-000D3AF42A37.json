{
    "properties": {
        "connectionReferences": {
            "shared_sharepointonline": {
                "runtimeSource": "embedded",
                "connection": {
                    "connectionReferenceLogicalName": "new_sharedsharepointonline_9ad14"
                },
                "api": {
                    "name": "shared_sharepointonline"
                }
            }
        },
        "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "$connections": {
                    "defaultValue": {},
                    "type": "Object"
                },
                "$authentication": {
                    "defaultValue": {},
                    "type": "SecureObject"
                },
                "envpar_config__TenantName": {
                    "defaultValue": "",
                    "type": "String",
                    "metadata": {
                        "schemaName": "new_envpar_config__TenantName"
                    }
                },
                "envpar_config__CycleZeroName": {
                    "defaultValue": "",
                    "type": "String",
                    "metadata": {
                        "schemaName": "new_envpar_config__CycleZeroName"
                    }
                },
                "envpar_config__TenantDomain": {
                    "defaultValue": "",
                    "type": "String",
                    "metadata": {
                        "schemaName": "new_envpar_config__TenantDomain"
                    }
                },
                "envpar_config__GraphAppId": {
                    "defaultValue": "",
                    "type": "String",
                    "metadata": {
                        "schemaName": "new_envpar_config__GraphAppId",
                        "description": "enter space character ( ) for none"
                    }
                },
                "envpar_config__GraphAppSecret": {
                    "defaultValue": "",
                    "type": "String",
                    "metadata": {
                        "schemaName": "new_envpar_config__GraphAppSecret",
                        "description": "enter space character ( ) for none"
                    }
                }
            },
            "triggers": {
                "manual": {
                    "type": "Request",
                    "kind": "Http",
                    "inputs": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "object": {
                                    "type": "string"
                                },
                                "api_version": {
                                    "type": "string"
                                },
                                "created": {
                                    "type": "integer"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "object": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "object": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "livemode": {
                                    "type": "boolean"
                                },
                                "pending_webhooks": {
                                    "type": "integer"
                                },
                                "request": {
                                    "type": "object",
                                    "properties": {
                                        "id": {},
                                        "idempotency_key": {}
                                    }
                                },
                                "type": {
                                    "type": "string"
                                },
                                "Cycle1GroupName": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "actions": {
                "Response_status_200": {
                    "runAfter": {},
                    "type": "Response",
                    "kind": "Http",
                    "inputs": {
                        "statusCode": 200
                    }
                },
                "Get_items_GroupsList": {
                    "runAfter": {
                        "Initialize_variable_IndexOfPrice": [
                            "Succeeded"
                        ]
                    },
                    "type": "OpenApiConnection",
                    "inputs": {
                        "host": {
                            "connectionName": "shared_sharepointonline",
                            "operationId": "GetItems",
                            "apiId": "/providers/Microsoft.PowerApps/apis/shared_sharepointonline"
                        },
                        "parameters": {
                            "dataset": "https://@{parameters('envpar_config__TenantName')}.sharepoint.com/sites/@{parameters('envpar_config__CycleZeroName')}",
                            "table": "GroupsList",
                            "$filter": "Cycle1GroupName eq '@{triggerBody()?['Cycle1GroupName']}'",
                            "$top": 1
                        },
                        "authentication": "@parameters('$authentication')"
                    }
                },
                "Initialize_variable_PriceActive": {
                    "runAfter": {
                        "Response_status_200": [
                            "Succeeded"
                        ]
                    },
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "PriceActive",
                                "type": "string"
                            }
                        ]
                    }
                },
                "Initialize_variable_IndexOfPrice": {
                    "runAfter": {
                        "Initialize_variable_PriceActive": [
                            "Succeeded"
                        ]
                    },
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "IndexOfPrice",
                                "type": "integer",
                                "value": -1
                            }
                        ]
                    }
                },
                "Apply_to_each_2": {
                    "foreach": "@outputs('Get_items_GroupsList')?['body/value']",
                    "actions": {
                        "Condition_5": {
                            "actions": {
                                "Parse_JSON_source": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@triggerBody()?['data']",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "object": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "object": {
                                                            "type": "string"
                                                        },
                                                        "alipay": {
                                                            "type": "object",
                                                            "properties": {
                                                                "statement_descriptor": {},
                                                                "native_url": {},
                                                                "data_string": {}
                                                            }
                                                        },
                                                        "amount": {
                                                            "type": "integer"
                                                        },
                                                        "client_secret": {
                                                            "type": "string"
                                                        },
                                                        "created": {
                                                            "type": "integer"
                                                        },
                                                        "currency": {
                                                            "type": "string"
                                                        },
                                                        "flow": {
                                                            "type": "string"
                                                        },
                                                        "livemode": {
                                                            "type": "boolean"
                                                        },
                                                        "metadata": {
                                                            "type": "object",
                                                            "properties": {
                                                                "customer": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "owner": {
                                                            "type": "object",
                                                            "properties": {
                                                                "address": {},
                                                                "email": {},
                                                                "name": {},
                                                                "phone": {},
                                                                "verified_address": {},
                                                                "verified_email": {},
                                                                "verified_name": {},
                                                                "verified_phone": {}
                                                            }
                                                        },
                                                        "redirect": {
                                                            "type": "object",
                                                            "properties": {
                                                                "failure_reason": {},
                                                                "return_url": {
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "statement_descriptor": {},
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "usage": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "Condition": {
                                    "actions": {
                                        "HTTP_Charge_source": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "method": "POST",
                                                "uri": "https://api.stripe.com/v1/charges",
                                                "headers": {
                                                    "Content-type": "application/x-www-form-urlencoded"
                                                },
                                                "body": "amount=@{triggerBody()?['data']?['object']?['amount']}&currency=@{triggerBody()?['data']?['object']?['currency']}&customer=@{triggerBody()?['data']?['object']?['metadata']?['customer']}&source=@{triggerBody()?['data']?['object']?['id']}",
                                                "authentication": {
                                                    "type": "Raw",
                                                    "value": "Bearer @{items('Apply_to_each_2')?['StripeKey']}"
                                                }
                                            }
                                        },
                                        "HTTP_Add_balance": {
                                            "runAfter": {
                                                "HTTP_Charge_source": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "method": "POST",
                                                "uri": "https://api.stripe.com/v1/customers/@{triggerBody()?['data']?['object']?['metadata']?['customer']}/balance_transactions",
                                                "headers": {
                                                    "Content-type": "application/x-www-form-urlencoded"
                                                },
                                                "body": "amount=-@{triggerBody()?['data']?['object']?['amount']}&currency=@{triggerBody()?['data']?['object']?['currency']}&metadata%5Bsource%5D=@{body('Parse_JSON_source')?['object']?['type']}&metadata%5Bid%5D=@{triggerBody()?['data']?['object']?['id']}",
                                                "authentication": {
                                                    "type": "Raw",
                                                    "value": "Bearer @{items('Apply_to_each_2')?['StripeKey']}"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON_source": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "or": [
                                            {
                                                "equals": [
                                                    "@body('Parse_JSON_source')?['object']?['type']",
                                                    "alipay"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@body('Parse_JSON_source')?['object']?['type']",
                                                    "wechat"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {},
                            "else": {
                                "actions": {
                                    "Condition_2": {
                                        "actions": {
                                            "Parse_JSON_subscription": {
                                                "runAfter": {},
                                                "type": "ParseJson",
                                                "inputs": {
                                                    "content": "@triggerBody()?['data']",
                                                    "schema": {
                                                        "type": "object",
                                                        "properties": {
                                                            "object": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "current_period_end": {
                                                                        "type": "integer"
                                                                    },
                                                                    "current_period_start": {
                                                                        "type": "integer"
                                                                    },
                                                                    "customer": {
                                                                        "type": "string"
                                                                    },
                                                                    "days_until_due": {},
                                                                    "pending_update": {},
                                                                    "plan": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "active": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "amount": {
                                                                                "type": "integer"
                                                                            },
                                                                            "livemode": {
                                                                                "type": "boolean"
                                                                            }
                                                                        }
                                                                    },
                                                                    "start_date": {
                                                                        "type": "integer"
                                                                    },
                                                                    "status": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "Condition_4": {
                                                "actions": {
                                                    "Set_variable": {
                                                        "runAfter": {},
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "PriceActive",
                                                            "value": "@body('Parse_JSON_subscription')?['object']?['plan']?['id']"
                                                        }
                                                    }
                                                },
                                                "runAfter": {
                                                    "Parse_JSON_subscription": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "else": {
                                                    "actions": {
                                                        "Set_variable_2": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "PriceActive",
                                                                "value": "@items('Apply_to_each_2')?['StripePrice0']"
                                                            }
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "or": [
                                                        {
                                                            "equals": [
                                                                "@body('Parse_JSON_subscription')?['object']?['status']",
                                                                "active"
                                                            ]
                                                        },
                                                        {
                                                            "equals": [
                                                                "@body('Parse_JSON_subscription')?['object']?['status']",
                                                                "trialing"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "Get_items_UsersList": {
                                                "runAfter": {
                                                    "Compose_PricesAll": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "OpenApiConnection",
                                                "inputs": {
                                                    "host": {
                                                        "connectionName": "shared_sharepointonline",
                                                        "operationId": "GetItems",
                                                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_sharepointonline"
                                                    },
                                                    "parameters": {
                                                        "dataset": "https://@{parameters('envpar_config__TenantName')}.sharepoint.com/sites/@{items('Apply_to_each_2')?['Cycle1GroupName']}",
                                                        "table": "UsersList",
                                                        "$filter": "StripeCustomerId eq '@{body('Parse_JSON_subscription')?['object']?['customer']}' and StripeSubscriptionId eq '@{body('Parse_JSON_subscription')?['object']?['id']}'",
                                                        "$top": 1
                                                    },
                                                    "authentication": "@parameters('$authentication')"
                                                }
                                            },
                                            "Apply_to_each_4": {
                                                "foreach": "@outputs('Get_items_UsersList')?['body/value']",
                                                "actions": {
                                                    "Update_item_UsersList": {
                                                        "runAfter": {
                                                            "Apply_to_each_3": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "OpenApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connectionName": "shared_sharepointonline",
                                                                "operationId": "PatchItem",
                                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_sharepointonline"
                                                            },
                                                            "parameters": {
                                                                "dataset": "https://@{parameters('envpar_config__TenantName')}.sharepoint.com/sites/@{items('Apply_to_each_2')?['Cycle1GroupName']}",
                                                                "table": "UsersList",
                                                                "id": "@items('Apply_to_each_4')?['ID']",
                                                                "item": {
                                                                    "Title": "@items('Apply_to_each_4')?['Title']",
                                                                    "StripePriceId": "@{body('Parse_JSON_subscription')?['object']?['plan']?['id']}",
                                                                    "StripePriceStatus": "@body('Parse_JSON_subscription')?['object']?['status']"
                                                                }
                                                            },
                                                            "authentication": "@parameters('$authentication')"
                                                        }
                                                    },
                                                    "Create_item": {
                                                        "runAfter": {
                                                            "Update_item_UsersList": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "OpenApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connectionName": "shared_sharepointonline",
                                                                "operationId": "PostItem",
                                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_sharepointonline"
                                                            },
                                                            "parameters": {
                                                                "dataset": "https://@{parameters('envpar_config__TenantName')}.sharepoint.com/sites/@{items('Apply_to_each_2')?['Cycle1GroupName']}",
                                                                "table": "LogsList",
                                                                "item": {
                                                                    "Title": "Update subscription @{items('Apply_to_each_4')?['Title']} to price @{variables('PriceActive')}",
                                                                    "Resource": "UsersList",
                                                                    "ResourceId": "@items('Apply_to_each_4')?['Title']",
                                                                    "ChangeType": "UPDATE",
                                                                    "Source": "cycle0_Stripe_Webhook",
                                                                    "LogDescription": "Update subscription @{items('Apply_to_each_4')?['Title']} with StripeSubscriptionId @{body('Parse_JSON_subscription')?['object']?['id']} to price @{variables('PriceActive')}"
                                                                }
                                                            },
                                                            "authentication": "@parameters('$authentication')"
                                                        }
                                                    },
                                                    "Apply_to_each_3": {
                                                        "foreach": "@body('Parse_JSON')",
                                                        "actions": {
                                                            "HTTP_Add_user": {
                                                                "runAfter": {},
                                                                "type": "Http",
                                                                "inputs": {
                                                                    "method": "POST",
                                                                    "uri": "https://graph.microsoft.com/v1.0/groups/@{items('Apply_to_each_3')['CyclesGroupId']}/members/$ref",
                                                                    "headers": {
                                                                        "Content-type": "application/json"
                                                                    },
                                                                    "body": {
                                                                        "@@odata.id": "https://graph.microsoft.com/v1.0/directoryObjects/@{items('Apply_to_each_4')?['UID']}"
                                                                    },
                                                                    "authentication": {
                                                                        "type": "ActiveDirectoryOAuth",
                                                                        "tenant": "@parameters('envpar_config__TenantDomain')",
                                                                        "audience": "https://graph.microsoft.com",
                                                                        "clientId": "@parameters('envpar_config__GraphAppId')",
                                                                        "secret": "@parameters('envpar_config__GraphAppSecret')"
                                                                    }
                                                                }
                                                            },
                                                            "Scope_3": {
                                                                "actions": {},
                                                                "runAfter": {
                                                                    "HTTP_Add_user": [
                                                                        "Failed",
                                                                        "Skipped",
                                                                        "TimedOut"
                                                                    ]
                                                                },
                                                                "type": "Scope"
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Parse_JSON": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Foreach"
                                                    },
                                                    "Parse_JSON": {
                                                        "runAfter": {
                                                            "Condition_Error": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ParseJson",
                                                        "inputs": {
                                                            "content": "@skip(outputs('Compose_PricesAll') , variables('IndexOfPrice'))",
                                                            "schema": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "CyclesGroupName": {
                                                                            "type": "string"
                                                                        },
                                                                        "CyclesGroupId": {
                                                                            "type": "string"
                                                                        },
                                                                        "StripePrices": {
                                                                            "type": "string"
                                                                        },
                                                                        "MicrosoftPrices": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "CyclesGroupName",
                                                                        "CyclesGroupId",
                                                                        "StripePrices",
                                                                        "MicrosoftPrices"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "Condition_Error": {
                                                        "actions": {
                                                            "Do_until": {
                                                                "actions": {
                                                                    "Parse_JSON_2": {
                                                                        "runAfter": {},
                                                                        "type": "ParseJson",
                                                                        "inputs": {
                                                                            "content": "@outputs('Compose_PricesAll')?[iterationIndexes('Do_until')]",
                                                                            "schema": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "CyclesGroupName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "CyclesGroupId": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "StripePrices": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "MicrosoftPrices": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "CyclesGroupName",
                                                                                    "CyclesGroupId",
                                                                                    "StripePrices",
                                                                                    "MicrosoftPrices"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    "Condition_6": {
                                                                        "actions": {
                                                                            "Set_variable_IndexOfPrice": {
                                                                                "runAfter": {},
                                                                                "type": "SetVariable",
                                                                                "inputs": {
                                                                                    "name": "IndexOfPrice",
                                                                                    "value": "@iterationIndexes('Do_until')"
                                                                                }
                                                                            }
                                                                        },
                                                                        "runAfter": {
                                                                            "Parse_JSON_2": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "else": {
                                                                            "actions": {
                                                                                "HTTP_Remove_user": {
                                                                                    "runAfter": {},
                                                                                    "type": "Http",
                                                                                    "inputs": {
                                                                                        "method": "DELETE",
                                                                                        "uri": "https://graph.microsoft.com/v1.0/groups/@{body('Parse_JSON_2')['CyclesGroupId']}/members/@{items('Apply_to_each_4')?['UID']}/$ref",
                                                                                        "authentication": {
                                                                                            "type": "ActiveDirectoryOAuth",
                                                                                            "tenant": "@parameters('envpar_config__TenantDomain')",
                                                                                            "audience": "https://graph.microsoft.com",
                                                                                            "clientId": "@parameters('envpar_config__GraphAppId')",
                                                                                            "secret": "@parameters('envpar_config__GraphAppSecret')"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "Scope_2": {
                                                                                    "actions": {},
                                                                                    "runAfter": {
                                                                                        "HTTP_Remove_user": [
                                                                                            "Failed",
                                                                                            "Skipped",
                                                                                            "TimedOut"
                                                                                        ]
                                                                                    },
                                                                                    "type": "Scope"
                                                                                }
                                                                            }
                                                                        },
                                                                        "expression": {
                                                                            "equals": [
                                                                                "@body('Parse_JSON_2')['StripePrices']",
                                                                                "@variables('PriceActive')"
                                                                            ]
                                                                        },
                                                                        "type": "If"
                                                                    }
                                                                },
                                                                "runAfter": {},
                                                                "expression": "@greaterOrEquals(variables('IndexOfPrice'), 0)",
                                                                "limit": {
                                                                    "count": 60,
                                                                    "timeout": "PT1H"
                                                                },
                                                                "type": "Until"
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "else": {
                                                            "actions": {
                                                                "Set_variable_3": {
                                                                    "runAfter": {},
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "IndexOfPrice",
                                                                        "value": 0
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "contains": [
                                                                "@string(outputs('Compose_PricesAll'))",
                                                                "@concat('\"', variables('PriceActive'),'\"')"
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                },
                                                "runAfter": {
                                                    "Get_items_UsersList": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Foreach"
                                            },
                                            "Compose_PricesAll": {
                                                "runAfter": {
                                                    "Condition_4": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Compose",
                                                "inputs": "@union(json(items('Apply_to_each_2')?['CyclesGroups']), json(concat('[ { \"CyclesGroupName\" : \"', items('Apply_to_each_2')?['Cycle1GroupName'], '\", \"CyclesGroupId\" : \"', items('Apply_to_each_2')?['Cycle1GroupId'] , '\" , \"StripePrices\" : \"',  items('Apply_to_each_2')?['StripePrice0'], '\" , \"MicrosoftPrices\" : \"', items('Apply_to_each_2')?['MicrosoftPrice0'] , '\" } ]')))"
                                            }
                                        },
                                        "runAfter": {},
                                        "expression": {
                                            "equals": [
                                                "@triggerBody()?['type']",
                                                "customer.subscription.updated"
                                            ]
                                        },
                                        "type": "If"
                                    }
                                }
                            },
                            "expression": {
                                "equals": [
                                    "@triggerBody()?['type']",
                                    "source.chargeable"
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "runAfter": {
                        "Get_items_GroupsList": [
                            "Succeeded"
                        ]
                    },
                    "type": "Foreach"
                }
            },
            "outputs": {}
        }
    },
    "schemaVersion": "1.0.0.0"
}